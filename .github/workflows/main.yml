name: Python package

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]

    steps:
      - uses: actions/checkout@v4
      - name: Setup Python # Set Python version
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      # Install pip and pytest
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
      - name: Test with pytest
        run: |
          cd ESP32/ESP32_Client/tests
          pytest --doctest-modules --junitxml=junit/test-results-client-${{ matrix.python-version }}.xml
          cd 
          cd work/Smart-Bookshelf/Smart-Bookshelf/ESP32/ESP32_Server/tests
          pytest --doctest-modules --junitxml=junit/test-results-server-${{ matrix.python-version }}.xml
      - name: Upload pytest test results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results-${{ matrix.python-version }}-client
          path: /home/runner/work/Smart-Bookshelf/Smart-Bookshelf/ESP32/ESP32_Client/tests/junit/test-results-client-${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
      - name: Upload pytest test results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results-${{ matrix.python-version }}-server
          path: /home/runner/work/Smart-Bookshelf/Smart-Bookshelf/ESP32/ESP32_Client/tests/junit/test-results-server-${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
